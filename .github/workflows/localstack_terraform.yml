name: LocalStack and Terraform Test

on: [push]
# on:
#   workflow_run:
#     workflows: ["LocalStack Test Workflow"]
#     types:
#       - completed

jobs:
  localstack_test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up LocalStack
      run: |
        docker run --rm -d -p 4566:4566 localstack/localstack

    # - name: Set up LocalStack
    #   uses: localstack/localstack-action@v1
    #   with:
    #     services: ec2, s3, apigateway, lambda
    #     debug: true

    - name: Set up Terraform
      run: |
        sudo apt-get update && sudo apt-get install -y terraform

    - name: Upload artifacts (optional)
      uses: actions/upload-artifact@v3
      with:
        name: localstack-test-artifacts
        path: .

  dust_resources_delete:
    runs-on: ubuntu-latest
    needs: [dust_resources_delete]

    steps:
    # - name: Set up LocalStack
    #   uses: localstack/github-action@v1
    #   with:
    #     services: ec2, s3, apigateway, lambda
    #     debug: true

    - name: Delete EC2 Instances
      run: |
        INSTANCE_IDS=$(aws --endpoint-url=http://localhost:4566 ec2 describe-instances --query "Reservations[*].Instances[*].InstanceId" --output text)
        for instance_id in $INSTANCE_IDS; do
          aws --endpoint-url=http://localhost:4566 ec2 terminate-instances --instance-ids $instance_id
        done
        aws --endpoint-url=http://localhost:4566 ec2 wait instance-terminated --instance-ids $INSTANCE_IDS

    - name: Delete VPCs
      run: |
        VPC_IDS=$(aws --endpoint-url=http://localhost:4566 ec2 describe-vpcs --query "Vpcs[*].VpcId" --output text)
        for vpc_id in $VPC_IDS; do
          IGW_ID=$(aws --endpoint-url=http://localhost:4566 ec2 describe-internet-gateways --filters Name=attachment.vpc-id,Values=$vpc_id --query "InternetGateways[0].InternetGatewayId" --output text)
          if [ "$IGW_ID" != "None" ]; then
            aws --endpoint-url=http://localhost:4566 ec2 detach-internet-gateway --internet-gateway-id $IGW_ID --vpc-id $vpc_id
            aws --endpoint-url=http://localhost:4566 ec2 delete-internet-gateway --internet-gateway-id $IGW_ID
          fi
          SUBNET_IDS=$(aws --endpoint-url=http://localhost:4566 ec2 describe-subnets --filters Name=vpc-id,Values=$vpc_id --query "Subnets[*].SubnetId" --output text)
          for subnet_id in $SUBNET_IDS; do
            aws --endpoint-url=http://localhost:4566 ec2 delete-subnet --subnet-id $subnet_id
          done
          aws --endpoint-url=http://localhost:4566 ec2 delete-vpc --vpc-id $vpc_id
        done

    - name: Delete S3 Buckets
      run: |
        BUCKETS=$(aws --endpoint-url=http://localhost:4566 s3api list-buckets --query "Buckets[*].Name" --output text)
        for bucket in $BUCKETS; do
          aws --endpoint-url=http://localhost:4566 s3 rb s3://$bucket --force
        done

  terraform_apply:
    runs-on: ubuntu-latest
    needs: [localstack_test, dust_resources_delete]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Terraform
      run: |
        sudo apt-get update && sudo apt-get install -y terraform

    - name: Initialize Terraform
      run: |
        cd terraform
        terraform init

    - name: Apply Terraform configuration
      run: |
        cd terraform
        terraform apply -auto-approve