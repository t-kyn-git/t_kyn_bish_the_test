<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Spreadsheet</title>
    <style>
        table {
            width: 100%;
            border-collapse: collapse;
        }
        th, td {
            border: 1px solid black;
            padding: 8px;
            text-align: left;
            min-width: 80px;
        }
        th {
            background-color: #f2f2f2;
        }
    </style>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/handsontable@11.1.0/dist/handsontable.full.min.css">
    <script src="https://cdn.jsdelivr.net/npm/handsontable@11.1.0/dist/handsontable.full.min.js"></script>
</head>
<body>
    <h2>スプレッドシート</h2>
    <div id="spreadsheet"></div>
    <table border="1">
        <thead>
            <tr>
                <th></th> <!-- 左上の空白セル -->
                {% for col_num in col_range %}
                    <th>{{ col_num }}</th>
                {% endfor %}
            </tr>
        </thead>
        <tbody>
            {% for row in table_data %}
            <tr>
                {% for col_num in col_range %}
                    <td>{{ table_data|default:"" |slice:":col_num"|join:"," }}</td>
                {% endfor %}
            </tr>
            {% endfor %}
        </tbody>
    </table>
    <button id="saveBtn">保存</button>

    <script>
        document.addEventListener("DOMContentLoaded", function() {
            const container = document.getElementById("spreadsheet");
            const hot = new Handsontable(container, {
                data: [],
                colHeaders: ["A", "B", "C", "D", "E"],
                rowHeaders: true,
                minRows: 10,
                minCols: 5,
                minSpareRows: 1, // 新規行を自動追加
                contextMenu: true, // 右クリックメニュー
                licenseKey: "non-commercial-and-evaluation"
            });

            // データ取得
            fetch("/api/spreadsheet/")
                .then(response => response.json())
                .then(data => {
                    const gridData = Array.from({ length: 10 }, () => Array(5).fill(""));  // 空の2D配列
                    data.data.forEach(item => {
                        gridData[item.row][item.column] = item.value;
                    });
                    hot.loadData(gridData);
                });

            // 保存ボタンの処理
            document.getElementById("saveBtn").addEventListener("click", function() {
                fetch("/api/spreadsheet/save/", {
                    method: "POST",
                    headers: { "Content-Type": "application/json", "X-CSRFToken": "{{ csrf_token }}" },
                    body: JSON.stringify({ spreadsheet: hot.getData() })
                }).then(response => response.json())
                  .then(data => alert("保存しました！"));
            });
        });
    </script>
</body>
</html>
